{"version":3,"sources":["helpers/history.js","helpers/screen.js","router/index.js","store/pokemon/actionTypes.js","store/pokemon/reducer.js","store/index.js","graphQLClient/index.js","screens/App/index.jsx","components/Image/style.js","components/Image/index.js","constant/Images.js","assets/img/pokeball.png","assets/img/loading.gif","constant/Colors.js","components/Input/style.js","components/Input/index.jsx","components/Loading/style.js","components/Loading/index.jsx","components/Button/style.js","components/Button/index.jsx","components/PokeCard/style.js","components/PokeCard/index.jsx","graphQLClient/query/pokemon.js","screens/Dashboard/Components/Navbar/style.js","screens/Dashboard/Components/Navbar/index.jsx","screens/Dashboard/style.js","screens/Dashboard/index.jsx","screens/Detail/Components/CatchModal/style.js","screens/Detail/Components/CatchModal/index.jsx","screens/Detail/style.js","screens/Detail/index.jsx","store/pokemon/actions.js","screens/MyPokemon/style.js","screens/MyPokemon/index.jsx","reportWebVitals.js","index.js"],"names":["createBrowserHistory","size","xs","sm","md","lg","sizesMax","tablet","sizesMin","Router","history","path","component","Detail","MyPokemon","Dashboard","initial","action","initialState","list","addPokemon","state","payload","newState","JSON","parse","stringify","push","releasePokemon","filter","pokemon","nickname","reducer","type","ACTIONS","ADD_POKEMON","RELEASE_POKEMON","rootReducer","combineReducers","Pokemon","persistConfig","key","storage","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","client","ApolloClient","uri","cache","InMemoryCache","App","loading","Container","styled","img","Image","props","pokeball","snow","default","light","lilac","lightLilac","darkLilac","CustomInput","Input","Colors","div","Loading","src","Images","CustomButton","Button","StyledImage","ReleaseButton","PokeCard","title","desc","image","onClickDetail","onRelease","onClick","GET_POKEMONS","gql","GET_DETAIL_POKEMON","Navbar","Row","Screen","NavBarImage","CutomNavbar","onClickMyPokemon","onClickHome","pokemons","span","className","justify","CardContainer","connect","useHistory","useQuery","variables","limit","offset","error","data","console","log","message","name","length","results","map","id","StyledModal","Modal","ModalButton","option","CatchModal","setModal","setName","isSuccess","visible","validation","addToList","centered","onCancel","footer","value","onChange","e","target","ImageContainer","StyledTag","Tag","CatchButton","mapDispatchToProps","useState","setPokemon","setValidation","setIsSuccess","modal","gqlVariables","match","params","useEffect","generateRandomColor","colorList","Math","floor","random","goBack","sprites","front_default","types","x","join","moves","slice","i","color","move","findIndex","poke","notification","success","placement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbc0aed4.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n});\n","const size = {\n  xs: '600px',\n  sm: '960px',\n  md: '1280px',\n  lg: '1920px'\n};\n\nconst sizesMax = {\n  xs: `screen and (max-width: ${size.xs})`,\n  sm: `screen and (max-width: ${size.sm})`,\n  md: `screen and (max-width: ${size.md})`,\n  lg: `screen and (max-width: ${size.lg})`,\n  tablet: 'screen and (min-device-width : 600px) and (max-device-width : 1024px)',\n};\n\nconst sizesMin = {\n  xs: `screen and (min-width: ${size.xs})`,\n  sm: `screen and (min-width: ${size.sm})`,\n  md: `screen and (min-width: ${size.md})`,\n  lg: `screen and (min-width: ${size.lg})`,\n};\n\nexport {\n  sizesMax,\n  size,\n  sizesMin\n};","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Router as BrowserRouter\n} from 'react-router-dom';\n\nimport {\n  Dashboard, Detail, MyPokemon\n} from 'screens';\nimport { History as history } from 'helpers';\n\nconst Router = () => {\n  return (\n    <BrowserRouter history={ history }>\n      <Switch>\n        <Route key={ 'Detail' } path={ '/detail/:name' } component={ Detail }/>\n        <Route key={ 'MyPokemon' } path={ '/my-pokemon' } component={ MyPokemon }/>\n        <Route key={ 'Dashboard' } path={ '' } component={ Dashboard } initial/>\n      </Switch>\n    </BrowserRouter>\n\n  );\n};\n\nexport default Router;\n","const action = {};\n\naction.ADD_POKEMON = 'ADD_POKEMON';\naction.RELEASE_POKEMON = 'RELEASE_POKEMON';\n\nexport default action;\n","import ACTIONS from './actionTypes';\n\nconst initialState = { list: [], };\n\nconst addPokemon = (state, payload) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  newState.list.push(payload);\n  return newState;\n};\n\nconst releasePokemon = (state, payload) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  newState.list = newState.list.filter(pokemon => pokemon.nickname !== payload);\n  return newState;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case ACTIONS.ADD_POKEMON:\n    return addPokemon(state, action.payload);\n  case ACTIONS.RELEASE_POKEMON:\n    return releasePokemon(state, action.payload);\n  default:\n    return state;\n  }\n};\n\nexport default reducer;\n","import { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  compose, applyMiddleware, createStore, combineReducers\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport Pokemon from './pokemon/reducer';\n\nconst rootReducer = combineReducers({ pokemon: Pokemon, });\n\nconst persistConfig = {\n  key: 'primary',\n  storage: storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport const persistor = persistStore(store);\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\n  cache: new InMemoryCache()\n});\n\nexport default client;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from '@apollo/client';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport 'antd/dist/antd.css';\n\nimport Router from 'router';\nimport { store, persistor } from '../../store';\nimport client from 'graphQLClient';\n\nconst App = () => {\n  return (\n    <ApolloProvider client={ client }>\n      <Provider store={ store }>\n        <PersistGate loading={ null } persistor={ persistor }>\n          <Router />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import styled from '@emotion/styled';\n\nconst Container = styled.img`\n`;\n\nexport { Container, };","import React from 'react';\n\nimport { Container } from './style';\n\nconst Image = props => {\n  return (\n    <Container { ...props } />\n  );\n};\n\nexport default Image;\n","/* eslint-disable no-undef */\nimport pokeball from 'assets/img/pokeball.png';\nimport loading from 'assets/img/loading.gif';\nexport default {\n  pokeball,\n  loading\n};\n","export default __webpack_public_path__ + \"static/media/pokeball.22a191f1.png\";","export default __webpack_public_path__ + \"static/media/loading.dc18ea15.gif\";","export default {\n  white: {\n    snow: 'rgb(240, 244, 250)',\n    default: 'rgb(255, 255, 255)'\n  },\n  grey: {\n    light: 'rgb(197, 200, 214)',\n    lilac: 'rgb(140, 146, 173)',\n    lightLilac: 'rgb(178, 183, 209)',\n    darkLilac: 'rgb(80, 85, 110)'\n  },\n  red: { default: 'rgb(202, 55, 44)' },\n  lilac: { default: 'rgb(204, 209, 237)' }\n};\n","import styled from '@emotion/styled';\nimport { Input } from 'antd';\nimport { Colors } from 'constant';\n\nexport const CustomInput = styled(Input)`\n  border-radius: 10px;\n  background-color: rgb(245, 246, 255);\n  border-color: ${Colors.grey.lightLilac};\n  margin-top: 10px;\n  \n  input {\n    background-color: transparent;\n  }\n`;\n","import React from 'react';\nimport { CustomInput } from './style';\n\nconst Input = props => {\n  return (\n    <CustomInput { ...props } />\n  );\n};\n\nexport default Input;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  top: 0;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport { Container, };","import React from 'react';\nimport { Images } from 'constant';\nimport { Container } from './style';\n\nconst Loading = () => {\n  return (\n    <Container >\n      <img src={ Images.loading } />\n    </Container>\n  );\n};\n\nexport default Loading;\n","import styled from '@emotion/styled';\nimport { Button } from 'antd';\nimport { Colors } from 'constant';\n\nexport const CustomButton = styled(Button)`\n  background-color: ${Colors.red.default};\n  color: ${Colors.white.default};\n  margin: 15px;\n  font-weight: bold;\n\n  &:active, :focus, :hover {\n    background: ${Colors.red.default};\n    border: none;\n    color: ${Colors.white.default};\n  }\n`;\n","import React from 'react';\nimport { CustomButton } from './style';\n\nconst Button = props => {\n  return (\n    <CustomButton size='large' { ...props } />\n  );\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport { Colors } from 'constant';\nimport { Image, Button } from 'components';\n\nconst Container = styled.div`\n  background-color: ${Colors.white.default} ;\n  border-radius: 15px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  h6 {\n    color: ${Colors.grey.darkLilac};\n    font-weight: bold;\n    font-size: 20px;\n    text-align: center;\n    margin-bottom: unset;\n  }\n\n  p {\n    color: ${Colors.grey.lilac};\n    font-size: 14px;\n    text-align: center;\n    margin-bottom: unset;\n  }\n`;\n\nconst StyledImage = styled(Image)`\n  width: 100%;\n  height: 70%;\n  object-fit: contain;\n`;\n\nconst ReleaseButton = styled(Button)`\n  border-radius: 10px;\n`;\n\nexport {\n  Container, StyledImage, ReleaseButton\n};","import React from 'react';\n\nimport {\n  Container, StyledImage, ReleaseButton\n} from './style';\n\nconst PokeCard = props => {\n  let {\n    title, desc, image, onClickDetail, onRelease, type,\n  } = props;\n\n  const onClick = () => {\n    if (onClickDetail) {\n      onClickDetail(title);\n    }\n  };\n\n  const onClickRelease = () => {\n    if (onRelease) {\n      onRelease(title);\n    }\n  };\n\n  return (\n    <Container onClick={ onClick }>\n      <StyledImage src={ image }/>\n      <h6>\n        { title }\n      </h6>\n      <p>{ desc }</p>\n\n      {\n        type === 'owned' &&  <ReleaseButton onClick={ onClickRelease }>\n        Release\n        </ReleaseButton>\n      }\n    </Container>\n  );\n};\n\nexport default PokeCard;\n","import { gql } from '@apollo/client';\n\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        id\n        name\n        image\n      }\n    }\n  }\n`;\n\nconst GET_DETAIL_POKEMON = gql`\nquery pokemon($name: String!) {\n  pokemon(name: $name) {\n    id\n    name\n    height\n    weight\n    sprites {\n      front_default\n    }\n    moves {\n      move {\n        name\n      }\n    }\n    types {\n      type {\n        name\n      }\n    }\n  }\n}\n`;\nexport { GET_POKEMONS, GET_DETAIL_POKEMON };","import styled from '@emotion/styled';\nimport { Row } from 'antd';\n\nimport { Image } from 'components';\nimport { Colors } from 'constant';\nimport { Screen } from 'helpers';\n\nconst Navbar = styled(Row)`\n  min-height: 50px;\n  align-items: center;\n  display: flex;\n  background-color: ${Colors.red.default};\n\n  .nav-title {\n    color: ${Colors.white.default};\n    font-size: 16px;\n    margin-top: unset;\n    margin-bottom: unset;\n    font-weight: bold;\n    margin-left: 20px;\n  }\n \n  .nav-owned {\n    color: ${Colors.white.default};\n    font-size: 16px;\n    margin-top: unset;\n    margin-bottom: unset;\n    font-weight: bold;\n    margin-left: 10px;\n  }\n  @media ${Screen.sizesMin.xs} {\n    .nav-owned {\n      margin-right: 20px;\n    }\n  }\n`;\n\nconst NavBarImage = styled(Image)`\n  width: 28px;\n  height: 28px;\n`;\n\nexport { Navbar, NavBarImage };","import React from 'react';\nimport { Col, Row } from 'antd';\n\nimport { Images } from 'constant';\nimport { NavBarImage, Navbar } from './style';\n\nconst CutomNavbar = ({\n  onClickMyPokemon, onClickHome, pokemons\n}) => {\n  return (\n    <Navbar>\n      <Col onClick={ onClickHome } span={ 20 }>\n        <h1 className='nav-title'>\n          Pokeapp\n        </h1>\n      </Col>\n      <Col onClick={ onClickMyPokemon } span={ 4 }>\n        <Row justify='end'>\n          <NavBarImage src={ Images.pokeball }/>\n          <h1 className='nav-owned'>\n            { pokemons }\n          </h1>\n        </Row>\n      </Col>\n    </Navbar>\n  );\n};\n\nexport default CutomNavbar;\n","import styled from '@emotion/styled';\n\nimport { Colors } from 'constant';\nimport { Screen } from 'helpers';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background-color: ${Colors.white.snow};\n`;\n\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 10px;\n  grid-row-gap: 15px;\n  padding: 15px;\n\n  @media ${Screen.sizesMin.xs} {\n    grid-template-columns: 1fr 1fr 1fr 1fr ;\n    grid-column-gap: 25px;\n    grid-row-gap: 25px;\n    padding: 20px;\n  }\n\n  @media ${Screen.sizesMin.sm} {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr ;\n    grid-column-gap: 25px;\n    grid-row-gap: 25px;\n    padding: 20px;\n  }\n\n  @media ${Screen.sizesMin.md} {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr ;\n    grid-column-gap: 25px;\n    grid-row-gap: 25px;\n    padding: 20px;\n  }\n`;\n\nexport { Container, CardContainer };","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Loading, PokeCard } from 'components';\nimport { GET_POKEMONS } from 'graphQLClient/query/pokemon';\n\nimport {  Navbar } from './Components';\nimport { Container, CardContainer } from './style';\n\nconst Dashboard = props => {\n  const history = useHistory();\n\n  const gqlVariables = {\n    limit: 50,\n    offset: 1,\n  };\n  const {\n    loading, error, data\n  } = useQuery(GET_POKEMONS, { variables: gqlVariables, });\n  if (error) console.log(`Error! ${error.message}`);\n\n  const onClickDetail = name => {\n    history.push(`/detail/${name}`);\n  };\n\n  const onClickHome = () => {\n    history.push('/');\n  };\n\n  const onClickMyPokemon = () => {\n    history.push('/my-pokemon');\n  };\n\n  return (\n    <Container >\n      <Navbar pokemons={ props.pokemons.length !== 0 ? props.pokemons.length : '' } onClickMyPokemon={ onClickMyPokemon } onClickHome={ onClickHome }/>\n\n      { loading && <Loading/> }\n      <CardContainer>\n        {\n          !loading && data && data.pokemons.results.map(pokemon => <PokeCard image={ pokemon.image } title={ pokemon.name } desc={ pokemon.id } onClickDetail={ onClickDetail } key={ pokemon.id } />)\n        }\n      </CardContainer>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({ pokemons: state.pokemon.list });\n\nexport default connect(mapStateToProps)(Dashboard);\n","import styled from '@emotion/styled';\nimport { Tag, Modal } from 'antd';\nimport { Button } from 'components';\nimport { Colors } from 'constant';\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding-bottom: 5px !important;\n  }\n  \n  .name-validation{\n    margin-top: 3px;\n    color: ${Colors.red.default};\n  }\n`;\n\nconst ModalButton = styled(Button)`\n  border-radius: 10px;\n  width: ${props => props.option === 'ok' ? '50%' : '70%'};\n`;\n\nexport { StyledModal, ModalButton };","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport { Input } from 'components';\nimport { StyledModal, ModalButton } from './style';\n\nconst CatchModal = ({\n  setModal, setName, isSuccess, pokemon, visible, name, validation, addToList\n}) => {\n  return (\n    <StyledModal centered onCancel={ () => setModal(false) } footer={ false } visible={ visible }>\n      <Row justify='center'>\n        {\n          isSuccess ? `Congratulations! you can now add ${pokemon.name} to your pokemon list. Choose a nickname:` : 'Sorry!! Better luck next time '\n        }\n      </Row>\n      {\n        isSuccess && <Row>\n          <Input value={ name } onChange={ e => setName(e.target.value) } />\n        </Row>\n      }\n      <Row>\n        <p className='name-validation'>\n          {\n            validation\n          }\n        </p>\n      </Row>\n      <Row justify='center'>\n        {\n          isSuccess ? <>\n            <Col span={ 12 }>\n              <ModalButton onClick={ () => setModal(false) }>\n              Cancel\n              </ModalButton>\n            </Col>\n            <Col span={ 12 }>\n              <ModalButton onClick={ addToList }>\n              Add\n              </ModalButton>\n            </Col>\n          </>\n            : <ModalButton option='ok' onClick={ () => setModal(false) }>\n             Ok\n            </ModalButton>\n        }\n      </Row>\n    </StyledModal>\n  );\n};\n\nexport default CatchModal;","import styled from '@emotion/styled';\nimport { Tag } from 'antd';\nimport { Button } from 'components';\nimport { Colors } from 'constant';\nimport { Screen } from 'helpers';\n\nconst Container = styled.div`\n  min-height: 100vh;\n\n  h1 {\n    margin-bottom: unset;\n    margin-top: 10px;\n    font-weight: bold;\n  }\n\n  .back-container{\n    background-color: ${Colors.red.default};\n    border-radius: 20px;\n    margin: 10px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    .back-icon {\n      color: ${Colors.white.default};\n    }\n    p {\n      color: ${Colors.white.default};\n      margin-bottom: unset;\n      margin-right: 10px;\n      font-weight: bold;\n    }\n  }\n\n`;\n\nconst StyledImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: contain;\n  z-index: 2;\n  max-height: 375px;\n  max-width: 375px;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n\n  .background-img {\n    background-color: ${Colors.white.snow};\n    width: 94%;\n    height: 45%;\n    position: absolute;\n    border-radius: 100%;\n    max-width: 400px;\n    z-index: -1;\n  }\n`;\n\nconst StyledTag = styled(Tag)`\n  margin: 3px;\n  border-radius: 10px;\n`;\n\nconst CatchButton = styled(Button)`\n  width: 94%;\n  position: absolute;\n  bottom: 15px;\n  border-radius: 10px;\n  max-width: 400px;\n`;\n\nexport {\n  Container, StyledImage, ImageContainer, StyledTag, CatchButton,\n};","import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Row, notification } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { IoIosArrowBack } from 'react-icons/io';\n\nimport { addPokemon } from 'store/pokemon/actions';\nimport { Loading } from 'components';\nimport { CatchModal } from './Components';\nimport { GET_DETAIL_POKEMON } from 'graphQLClient/query/pokemon';\n\nimport {\n  Container, StyledImage, ImageContainer, StyledTag, CatchButton\n} from './style';\n\nconst Detail = props => {\n  const history = useHistory();\n\n  const [pokemon, setPokemon] = useState(null);\n  const [name, setName] = useState('');\n  const [validation, setValidation] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  const gqlVariables = { name: props.match.params.name };\n  const {\n    loading, error, data\n  } = useQuery(GET_DETAIL_POKEMON, { variables: gqlVariables, });\n  \n  if (error) console.log(`Error! ${error.message}`);\n\n  useEffect(() => {\n    if (data) {\n      setPokemon(data.pokemon);\n    }\n  }, [data]);\n\n  const generateRandomColor = () => {\n    let colorList = [\n      'pink',\n      'red',\n      'yellow',\n      'orange',\n      'cyan',\n      'green',\n      'blue',\n      'purple',\n      'geekblue',\n      'magenta',\n      'volcano',\n      'gold',\n      'lime'\n    ];\n\n    var color = Math.floor(Math.random() * colorList.length);\n    return colorList[color];\n  };\n\n  const onGoBack = () => {\n    history.goBack();\n  };\n\n  const onCatchPokemon = () => {\n    setModal(true);\n    let random = Math.random() < 0.5;\n    if (random) {\n      setIsSuccess(true);\n    } else {\n      setIsSuccess(false);\n    }\n  };\n\n  const addToList = () => {\n    if (name) {\n      let index = props.pokemons.findIndex(poke => poke.nickname == name);\n      if (index === -1) {\n        props.addPokemon({\n          ...pokemon,\n          image: pokemon.sprites.front_default,\n          nickname: name,\n        });\n        notification.success({\n          message: 'Congrats for your new pokemon!',\n          placement: 'bottomRight'\n        });\n        setName('');\n        setModal(false);\n        setValidation('');\n      } else {\n        setValidation('Please choose another nickname!');\n      }\n    } else {\n      setValidation('Please input name!');\n    }\n  };\n\n  return (\n    <Container>\n      { loading && <Loading/> }\n      <Row>\n        <div onClick={ onGoBack } className='back-container'>\n          <IoIosArrowBack className='back-icon' size='30'/>\n          <p>Back</p>\n        </div>\n      </Row>\n      {\n        !loading && pokemon && <>\n          <div>\n            <Row>\n              <ImageContainer>\n                <div className='background-img' />\n                <StyledImage src={ pokemon.sprites.front_default }/>\n              </ImageContainer>\n            </Row>\n            <Row justify='center'>\n              <h1>\n                { pokemon.name }\n              </h1>\n            </Row>\n            <Row justify='center'>\n              <h3>\n              Type: { pokemon.types.map(x => x.type.name).join(', ') }\n              </h3>\n            </Row>\n            <Row justify='center'>\n              {\n                pokemon.moves.slice(-15).map((x, i) => <StyledTag key={ i } color={ generateRandomColor() }>{ x.move.name }</StyledTag>)\n              }\n            </Row>\n          </div>\n          <Row justify='center'>\n            <CatchButton onClick={ onCatchPokemon }>\n              Catch\n            </CatchButton>\n          </Row>\n        </>\n      }\n      <CatchModal\n        setModal={ setModal } setName={ setName } isSuccess={ isSuccess } pokemon={ pokemon } visible={ modal } name={ name } validation={ validation } addToList={ addToList }\n      />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({ pokemons: state.pokemon.list });\n\nconst mapDispatchToProps = { addPokemon };\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import ACTIONS from './actionTypes';\n\nconst addPokemon = pokemon => {\n  return {\n    type: ACTIONS.ADD_POKEMON,\n    payload: pokemon,\n  };\n};\n\nconst releasePokemon = nickname => {\n  return {\n    type: ACTIONS.RELEASE_POKEMON,\n    payload: nickname,\n  };\n};\n\nexport {\n  addPokemon,\n  releasePokemon\n};","import styled from '@emotion/styled';\nimport { Row } from 'antd';\n\nimport { Colors } from 'constant';\nimport { Screen } from 'helpers';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background-color: ${Colors.white.snow};\n`;\n\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr ;\n  grid-column-gap: 10px;\n  grid-row-gap: 15px;\n  padding: 20px;\n\n  @media ${Screen.sizesMin.xs} {\n    grid-template-columns: 1fr 1fr 1fr 1fr ;\n    grid-column-gap: 25px;\n    grid-row-gap: 25px;\n    padding: 20px;\n  }\n\n  @media ${Screen.sizesMin.sm} {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr ;\n    grid-column-gap: 25px;\n    grid-row-gap: 25px;\n    padding: 20px;\n  }\n\n  @media ${Screen.sizesMin.md} {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr ;\n    grid-column-gap: 25px;\n    grid-row-gap: 25px;\n    padding: 20px;\n  }\n`;\n\nconst Navbar = styled(Row)`\n  min-height: 50px;\n  align-items: center;\n  display: flex;\n  background-color: ${Colors.red.default};\n\n  .back-icon {\n    color: ${Colors.white.default};\n    position: absolute;\n    left: 10px;\n  }\n\n  .nav-title {\n    color: ${Colors.white.default};\n    font-size: 16px;\n    margin-top: unset;\n    margin-bottom: unset;\n    font-weight: bold;\n    margin-left: 20px;\n    text-align: center;\n  }\n`;\n\nexport {\n  Container, CardContainer, Navbar\n};","import React from 'react';\nimport { Col } from 'antd';\nimport { connect } from 'react-redux';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { useHistory } from 'react-router-dom';\n\nimport { releasePokemon } from 'store/pokemon/actions';\nimport { PokeCard } from 'components';\nimport {\n  Container, Navbar, CardContainer\n} from './style';\n\nconst MyPokemon = props => {\n  const history = useHistory();\n\n  const onGoBack = () => {\n    history.goBack();\n  };\n\n  const onRelease = nickname => {\n    props.releasePokemon(nickname);\n  };\n\n  return (\n    <Container>\n      <Navbar justify='center'>\n        { /* <Col span={ 3 } onClick={ onGoBack }>*/ }\n        <IoIosArrowBack onClick={ onGoBack } className='back-icon' size='30'/>\n        { /* </Col>*/ }\n        { /* <Col span={ 21 }>*/ }\n        <h1 className='nav-title'>\n          My Pokemon\n        </h1>\n        { /* </Col>*/ }\n      </Navbar>\n      <CardContainer>\n        {\n          props.pokemons.map((pokemon, i) => {\n            return (\n              <PokeCard image={ pokemon.image } title={ pokemon.nickname } desc={ pokemon.name } type='owned' key={ i + 'owned' } onRelease={ onRelease } />\n            );\n          })\n        }\n      </CardContainer>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({ pokemons: state.pokemon.list });\nconst mapDispatchToProps = { releasePokemon };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPokemon);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'screens';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}